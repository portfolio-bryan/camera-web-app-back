package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.55

import (
	"context"

	"github.com/bperezgo/rtsp/graph/model"
)

// GetPlaces is the resolver for the getPlaces field.
func (r *queryResolver) GetPlaces(ctx context.Context, criteria *model.GetPlacesCriteria) ([]*model.Place, error) {
	return []*model.Place{
		{
			ID:      "1",
			Name:    "Place 1",
			UserID:  "1",
			Cameras: []*model.Camera{},
		},
		{
			ID:      "2",
			Name:    "Place 2",
			UserID:  "1",
			Cameras: []*model.Camera{},
		},
	}, nil
}

// GetCameras is the resolver for the getCameras field.
func (r *queryResolver) GetCameras(ctx context.Context, criteria *model.GetCamerasCriteria) ([]*model.Camera, error) {
	return []*model.Camera{
		{
			ID:      "1",
			PlaceID: "1",
			UserID:  "1",
		},
		{
			ID:      "2",
			PlaceID: "1",
			UserID:  "1",
		},
		{
			ID:      "3",
			PlaceID: "1",
			UserID:  "1",
		},
		{
			ID:      "4",
			PlaceID: "1",
			UserID:  "1",
		},
	}, nil
}

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
